<?xml version="1.0" encoding="UTF-8"?>
<!-- spring MVC的配置 author:ChenLiang E-mail:burningcl@gmail.com -->
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:tx="http://www.springframework.org/schema/tx" xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    http://www.springframework.org/schema/context 
    http://www.springframework.org/schema/context/spring-context-3.0.xsd
	http://www.springframework.org/schema/mvc
	http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
	http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd
   
		"
	default-autowire="byName">
	<!-- Spring MVC所扫描的路径 -->
	<context:component-scan base-package="fire.crud.controller">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

	<context:property-placeholder location="classpath:mysqldb.properties,classpath:config.properties" file-encoding="utf-8" />

	<!-- Configures the @Controller programming model -->
	<mvc:annotation-driven />

	<!-- <bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping"> -->
	<!-- <property name="interceptors"> -->
	<!-- <array> -->
	<!-- <bean class="tc.interceptor.ManagerInterceptor"></bean> -->
	<!-- </array> -->
	<!-- </property> -->
	<!-- </bean> -->

	<!-- <bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping" /> -->
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<util:list id="beanList">
				<ref bean="mappingJacksonHttpMessageConverter" />
			</util:list>
		</property>
	</bean>
	<bean id="mappingJacksonHttpMessageConverter" class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/html;charset=UTF-8</value>
			</list>
		</property>
	</bean>

	<!-- JSP views,前缀为/view/,后缀为.jsp，所有大家在Controller中不需要写前缀与后缀，表现层，我们一致使用jsp -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/" />
		<property name="suffix" value=".jsp" />
		<property name="contentType">
			<value>text/html;charset=UTF-8</value>
		</property>
	</bean>

	<!-- SpringMVC上传文件时，需要配置MultipartResolver处理器 -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 指定所上传文件的总大小不能超过200KB。注意maxUploadSize属性的限制不是针对单个文件，而是所有文件的容量之和 -->
		<property name="maxUploadSize" value="20000000" />
	</bean>

	<!-- 该异常是SpringMVC在检查上传的文件信息时抛出来的，而且此时还没有进入到Controller方法中 -->
	<bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="defaultErrorView">
			<value>showError</value>
		</property>
		<property name="exceptionMappings">
			<props>
				<prop key="java.lang.RuntimeException">showError</prop>
				<prop key="tc.exception.AjaxException">showAjaxError</prop>
				<!-- 遇到MaxUploadSizeExceededException异常时， -->
				<prop key="org.springframework.web.multipart.MaxUploadSizeExceededException">showError</prop>
			</props>
		</property>
	</bean>

	<mvc:interceptors>
		<bean class="fire.crud.interceptor.LoginAnnotationInterceptor"></bean>
<!-- 		<bean class="fire.crud.interceptor.AuthorityAnnotationInterceptor"></bean> -->
		<!-- <mvc:interceptor> -->
		<!-- <mvc:mapping path="/customer/**"/> -->
		<!-- <bean class="tc.interceptor.AuthorityInterceptor"> -->
		<!-- <property name="typeName" value="CUSTOMER"></property> -->
		<!-- </bean> -->
		<!-- </mvc:interceptor> -->
	</mvc:interceptors>

</beans>